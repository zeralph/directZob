# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  #solution: './DirectZobEngine/build/**/*.sln'
  solution: './DirectZobEngine/build/DirectZob/DirectZob.sln'
  testSolution: './DirectZobEngine_unittests/DirectZobEngine_unittests.sln'
  buildPlatform: 'x86|x64|ARM'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'

#- script: python -m pip install --upgrade pip setuptools
#  displayName: 'Install pyhton tools'

- script: python -m pip install git+https://chromium.googlesource.com/external/gyp
  displayName: 'Install gyp'

#- script: gyp ./DirectZobEngine/DirectZob.gyp --depth=. --generator-output=./DirectZobEngine/build/DirectZob/ -f msvs -G msvs_version=2017 -d all
#  displayName: 'Generate sln'

- script: generate_sln.bat
  workingDirectory: ./DirectZobEngine/
  displayName: 'Generate sln'

- script: python ./strip_emptylines.py ./build\DirectZob\DirectZob.sln
  workingDirectory: ./DirectZobEngine/
  displayName: 'faire des trucs chelous au sln'

- task: VSBuild@1
  name: 'buildDirectZobEngine'
  inputs:
    solution: '$(solution)'
    vsVersion: '15.0'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'
    configuration: '$(buildConfiguration)'
    restoreNugetPackages: true
    msbuildArchitecture: 'x64'
- task: VSBuild@1
  name: 'buildDirectZobTests'
  inputs:
    solution: '$(testSolution)'
    vsVersion: '15.0'
    msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload'
    configuration: '$(buildConfiguration)'
    restoreNugetPackages: true
    msbuildArchitecture: 'x64'
- task: CmdLine@1
  displayName: Run Unit Tests (GTest)
  inputs:
    script: './DirectZobEngine_unittests/x64/Release/DirectZobEngine_unittests.exe --gtest_output="xml:DirectZobEngine_unittests.xml"'
- task: PublishTestResults@2
  name: 'PublishDirectZobTests'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/*_unittests.xml'
    mergeTestResults: true
    failTaskOnFailedTests: true

- script: smokeTestWindows.bat
  workingDirectory: .
  displayName: 'Smoke Test'
