# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := DirectZobExe
DEFS_Debug := \
	'-DMACOS' \
	'-DUSE_METAL_API' \
	'-DDEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fasm-blocks \
	-mpascal-strings \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.14 \
	-arch i386

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=c++11 \
	-stdlib=libc++

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I$(srcdir)/. \
	-I$(srcdir)/../dependencies/fbxsdk/macos/include \
	-I$(srcdir)/../dependencies/minifb \
	-I$(srcdir)/../dependencies/tinyxml \
	-I$(srcdir)/../dependencies/nanojpeg

DEFS_Release := \
	'-DMACOS' \
	'-DUSE_METAL_API' \
	'-DRELEASE'

# Flags passed to all source files.
CFLAGS_Release := \
	-fasm-blocks \
	-mpascal-strings \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.14 \
	-arch i386

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=c++11 \
	-stdlib=libc++

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I$(srcdir)/. \
	-I$(srcdir)/../dependencies/fbxsdk/macos/include \
	-I$(srcdir)/../dependencies/minifb \
	-I$(srcdir)/../dependencies/tinyxml \
	-I$(srcdir)/../dependencies/nanojpeg

OBJS := \
	$(obj).target/$(TARGET)/main.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/libDirectZobEngine.a $(builddir)/libminifb.a $(builddir)/libtinyxml.a $(builddir)/libnanojpeg.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cpp FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-mmacosx-version-min=10.14 \
	-arch i386 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug :=

LDFLAGS_Release := \
	-mmacosx-version-min=10.14 \
	-arch i386 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release :=

LIBS := \
	../../../dependencies/fbxsdk/macos/lib/clang/release/libfbxsdk.a

$(builddir)/DirectZobExe: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/DirectZobExe: LIBS := $(LIBS)
$(builddir)/DirectZobExe: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/DirectZobExe: LD_INPUTS := $(OBJS) $(builddir)/libDirectZobEngine.a $(builddir)/libminifb.a $(builddir)/libtinyxml.a $(builddir)/libnanojpeg.a
$(builddir)/DirectZobExe: TOOLSET := $(TOOLSET)
$(builddir)/DirectZobExe: $(OBJS) $(builddir)/libDirectZobEngine.a $(builddir)/libminifb.a $(builddir)/libtinyxml.a $(builddir)/libnanojpeg.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/DirectZobExe
# Add target alias
.PHONY: DirectZobExe
DirectZobExe: $(builddir)/DirectZobExe

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/DirectZobExe

